default:
  image: golang:1.23-alpine3.20

variables:
  GO111MODULE: "on"
  CGO_ENABLED: "0"
  BINARY_NAME: "ult"

stages:
  - build
  - deploy

build-job:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Downloading go packages"
    - go mod download

    - echo "Compiling ult for linux amd64"
    - mkdir -p linux-amd64
    - GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o linux-amd64/${BINARY_NAME} .
    - tar -czvf linux-amd64.tar.gz linux-amd64

    - echo "Compiling ult for macos amd64"
    - mkdir -p darwin-amd64
    - GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o darwin-amd64/${BINARY_NAME} .
    - tar -czvf darwin-amd64.tar.gz darwin-amd64

    - echo "Compiling ult for macos arm64"
    - mkdir -p darwin-arm64
    - GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o darwin-arm64/${BINARY_NAME} .
    - tar -czvf darwin-arm64.tar.gz darwin-arm64

  artifacts:
    paths:
      - ./linux-amd64.tar.gz
      - ./darwin-amd64.tar.gz
      - ./darwin-arm64.tar.gz
    when: on_success
    access: all
    expire_in: 1 week
